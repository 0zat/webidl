(* keywords which match identifier reguler expression rule in lexer.ml *)
let unsigned = "unsigned" 
let byte = "byte" 
let octet = "octet" 
let short = "short" 
let long = "long" 
let domstring = "DOMString" 
let usvstring = "USVString" 
let bytestring = "ByteString" 
let unrestricted = "unrestricted" 
let float = "float" 
let double = "double" 
let any = "any" 
let void = "void" 
let boolean = "boolean" 
let object_ = "object" 
let or_ = "or" 
let true_ = "true" 
let false_ = "false" 
let null = "null" 
let infinity_ = "Infinity" 
let nan_ = "NaN" 
let setter = "setter" 
let getter = "getter" 
let deleter = "deleter" 
let legacycaller = "legacycaller" 
let serializer = "serializer" 
let stringifier = "stringifier" 
let maplike = "maplike" 
let setlike = "setlike" 
let iterable = "iterable" 
let promise = "Promise" 
let record = "record" 
let sequence = "sequence" 
let namespace = "namespace" 
let callback = "callback" 
let partial = "partial" 
let mixin = "mixin" 
let includes = "includes" 
let interface = "interface" 
let dictionary = "dictionary" 
let enum = "enum" 
let implements = "implements" 
let inherit_ = "inherit" 
let attribute = "attribute" 
let typedef = "typedef" 
let const = "const" 
let readonly = "readonly" 
let required = "required" 
let static = "static" 
let optional = "optional" 
let domexception = "DOMException" 
let error = "Error" 
let int8array = "Int8Array" 
let int16array = "Int16Array" 
let int32array = "Int32Array" 
let uint8array = "Uint8Array" 
let uint16array = "Uint16Array" 
let uint32array = "Uint32Array" 
let uint8clampedarray = "Uint8ClampedArray" 
let float32array = "Float32Array" 
let float64array = "Float64Array" 
let arraybuffer = "ArrayBuffer" 
let dataview = "DataView" 
let frozenarray = "FrozenArray"

(* symbols *)
let lpar = "("
let rpar = ")"
let lbracket = "["
let rbracket = "]"
let lbrace = "{"
let rbrace = "}"
let lt = "<"
let gt = ">"
let minusinfinity = "-Infinity"
let question = "?"
let equal = "="
let comma = ","
let colon = ":"
let semicolon = ";"
let ellipsis = "..."
